<Window x:Class="Mapping_Tools.Views.SnappingTools.SnappingToolsPreferencesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Mapping_Tools.Classes.SnappingTools"
        xmlns:components="clr-namespace:Mapping_Tools.Components.Domain"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:components1="clr-namespace:Mapping_Tools.Components"
        mc:Ignorable="d"
        Title="Snapping Tools Preferences" Height="500" Width="570" MinWidth="575" MinHeight="360"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" Background="{DynamicResource MaterialDesignPaper}"
        d:DataContext="{d:DesignData SnappingToolsPreferences}">
    
    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="35"
            ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
 
    <Window.Resources>
        <components:EnumToBoolConverter x:Key="EnumToBoolConverter"/>
        <components:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        <components:IntToStringConverter x:Key="IntToStringConverter"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid VerticalAlignment="Top" Grid.Row="0">
            <StackPanel WindowChrome.IsHitTestVisibleInChrome="true" Height="35" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="{materialDesign:PackIcon WindowCLose}" Click="CancelButton_Click" HorizontalAlignment="Right" Height="35" Foreground="{DynamicResource MaterialDesignBody}"/>
            </StackPanel>
        </Grid>

        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden">
            <Border Padding="10">
                <StackPanel>
                    <ItemsControl ItemsSource="{Binding RelevantObjectPreferences}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card Margin="0 0 0 5">
                                    <TreeViewItem Header="{Binding Key}" Foreground="{DynamicResource MaterialDesignBody}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBox Text="{Binding Color, ElementName=ColorPicker}"
								                     Style="{StaticResource MaterialDesignFilledTextFieldTextBox}" materialDesign:HintAssist.Hint="Color HEX value"
								                     Width="120" Margin="2,0,10,2"/>
                                            <materialDesign:ColorPicker Color="{Binding Value.Color}" x:Name="ColorPicker" Width="300"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Opacity" Width="120" VerticalAlignment="Center"/>
                                            <Slider x:Name="OpacitySlider" Width="300" TickFrequency="0.01" Orientation="Horizontal" Minimum="0" Maximum="1" Value="{Binding Value.Opacity, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                            <TextBox x:Name="OpacityTextbox" Width="40" Text="{Binding ElementName=OpacitySlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Thickness" Width="120" VerticalAlignment="Center"/>
                                            <Slider x:Name="ThicknessSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Value.Thickness, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                            <TextBox x:Name="ThicknessTextbox" Width="40" Text="{Binding ElementName=ThicknessSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="DashStyle" Width="120" VerticalAlignment="Center"/>
                                            <ComboBox x:Name="DashStyleCombobox" Width="300" Margin="11,0" ItemsSource="{Binding Value.DashStylesEnumerable}" SelectedItem="{Binding Value.Dashstyle}"/>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal" Visibility="{Binding Value.HasSizeOption, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <TextBlock Text="Size" Width="120" VerticalAlignment="Center"/>
                                            <Slider x:Name="SizeSlider" Width="300" TickFrequency="1" Orientation="Horizontal" Minimum="1" Maximum="10" Value="{Binding Value.Size, UpdateSourceTrigger=PropertyChanged}" Margin="5, 0" Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                                            <TextBox x:Name="SizeTextbox" Width="40" Text="{Binding ElementName=SizeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                    </TreeViewItem>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Border Padding="5 10">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Text="Snap Key" VerticalAlignment="Bottom" Margin="0 0 0 6" ToolTip="Press and hold this key to snap your cursor to the closest virtual object."/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding SnapHotkey}"/>
                                <TextBlock Width="100" Text="Select Key" VerticalAlignment="Bottom" Margin="10 0 0 6" ToolTip="Press or hold this key to select virtual objects."/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding SelectHotkey}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Text="Lock Key" VerticalAlignment="Bottom" Margin="0 0 0 6" ToolTip="Press or hold this key to lock virtual objects."/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding LockHotkey}"/>
                                <TextBlock Width="100" Text="Inherit Key" VerticalAlignment="Bottom" Margin="10 0 0 6" ToolTip="Press or hold this key to select which virtual objects can get used by generators."/>
                                <components1:HotkeyEditorControl Width="150" VerticalAlignment="Bottom" Hotkey="{Binding InheritHotkey}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Offset" VerticalAlignment="Bottom" ToolTip="Offsets the overlay box. Use this field when the automatic editor-to-screen coordinate conversion seems to fail."/>
                                <TextBox Text="{Binding OffsetLeft, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Left offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"/>
                                <TextBox Text="{Binding OffsetTop, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Top offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"/>
                                <TextBox Text="{Binding OffsetRight, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Right offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}" Margin="0 0 10 0"/>
                                <TextBox Text="{Binding OffsetBottom, Converter={StaticResource DoubleToStringConverter}}" Width="95" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Bottom offset" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Complexity" VerticalAlignment="Bottom" ToolTip="Specifies how many layers of virtual objects can be used. More layers means more generation of virtual objects from the previous virtual objects in the tree."/>
                                <TextBox Text="{Binding InceptionLevel, Converter={StaticResource IntToStringConverter}}" Width="120" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Inception level" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                         ToolTip="Specifies how many layers of virtual objects can be used. More layers means more generation of virtual objects from the previous virtual objects in the tree. It is recommended to use between 2 and 10 layers."/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Downkey" VerticalAlignment="Center" ToolTip="Customize what gets displayed when the Activation Key is pressed."/>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Everything}}"
                                                 Content="Everything" ToolTip="Default behavior. Display all virtual objects when the Activation Key is pressed."/>
                                    <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.ChildrenAndParents}}"
                                                 Content="Children and Parents" ToolTip="Display the object the cursor is currently snapping to, its parents and its children."/>
                                    <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Parents}}"
                                                 Content="Parents" ToolTip="Display the object the cursor is currently snapping to and its parents."/>
                                    <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Children}}"
                                                 Content="Children" ToolTip="Display the object the cursor is currently snapping to and its children."/>
                                    <RadioButton IsChecked="{Binding KeyDownViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Nothing}}"
                                                 Content="Nothing" ToolTip="Do not display anything even if the Activation Key is pressed."/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Upkey" VerticalAlignment="Center" ToolTip="Customize what gets displayed when the Activation Key is not pressed."/>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Everything}}"
                                                 Content="Everything" ToolTip="Default behavior. Display all virtual objects even if the Activation Key is not pressed."/>
                                    <RadioButton IsChecked="{Binding KeyUpViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Nothing}}"
                                                 Content="Nothing" ToolTip="Do not display anything if the Activation Key is not pressed."/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Selection" VerticalAlignment="Center" ToolTip="Customize what hit objects get used for generating virtual objects."/>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:SelectedHitObjectMode.AllwaysAllVisible}}"
                                                 Content="All visible" ToolTip="Use the visible hit objects regardless of selection."/>
                                    <RadioButton IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:SelectedHitObjectMode.VisibleOrSelected}}"
                                                 Content="Visible or selected" ToolTip="Use the visible hit objects, but use the selected hit objects if any are selected."/>
                                    <RadioButton IsChecked="{Binding SelectedHitObjectMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:SelectedHitObjectMode.OnlySelected}}"
                                                 Content="Selected only" ToolTip="Exclusively use selected hit objects."/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Updating" VerticalAlignment="Center" ToolTip="Customize on what events the virtual objects get updated."/>
                                <StackPanel>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:UpdateMode.AnyChange}}"
                                                 Content="Any change" ToolTip="Update whenever used hit objects get changed."/>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:UpdateMode.TimeChange}}"
                                                 Content="Time change" ToolTip="Update whenever the editor changes time."/>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:UpdateMode.HotkeyDown}}"
                                                 Content="Hotkey down" ToolTip="Update whenever the snapping hotkey is down."/>
                                    <RadioButton IsChecked="{Binding UpdateMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:UpdateMode.OsuActivated}}"
                                                 Content="osu! activated" ToolTip="Update whenever the osu! window goes from an inactive state to an active state."/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Minimal diff" VerticalAlignment="Bottom" ToolTip="Similar virtual objects get merged together. This sets the minimal acceptable difference that two objects can have and not get merged together."></TextBlock>
                                <TextBox Text="{Binding AcceptableDifference, Converter={StaticResource DoubleToStringConverter}}" Width="150" VerticalAlignment="Bottom" materialDesign:HintAssist.Hint="Minimal difference" Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Keep Running" VerticalAlignment="Center" ToolTip="Keeps Geometry Dashboard running in the background while other tools are open."/>
                                <ToggleButton IsChecked="{Binding KeepRunning}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <TextBlock Width="100" Margin="0 0 0 6" Text="Debug" VerticalAlignment="Center" ToolTip="Visualize boundaries of the overlay box for debugging purposes."/>
                                <ToggleButton IsChecked="{Binding DebugEnabled}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSwitchToggleButton}"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>
        </ScrollViewer>


        <Border Grid.Row="2" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="ApplyButton" Content="Apply" Click="ApplyButton_Click"/>
                <Button Grid.Column="1" Width="200" materialDesign:ButtonAssist.CornerRadius="10" x:Name="CancelButton" Content="Cancel" Click="CancelButton_Click"/>
            </Grid>
        </Border>

        <Border BorderThickness="1" Grid.Row="0" Grid.RowSpan="3" Background="{x:Null}" BorderBrush="{DynamicResource PrimaryHueDarkBrush}"/>

    </Grid>
    
</Window>
