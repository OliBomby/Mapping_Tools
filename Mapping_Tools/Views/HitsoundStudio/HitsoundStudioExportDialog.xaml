<UserControl x:Class="Mapping_Tools.Views.HitsoundStudio.HitsoundStudioExportDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignData HitsoundStudioVm}">
    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />            
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="0 6 0 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="ExportFolderBox" Text="{Binding ExportFolder, Mode=TwoWay}" MinWidth="220" Margin="0,0,5,0"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Export folder"
                         ToolTip="The folder to export the hitsound beatmap and hitsound samples to. Original items in this folder could be deleted."/>
                <Button x:Name="ExportFolderBrowseButton" Grid.Column="1" Cursor="Hand" Click="ExportFolderBrowseButton_OnClick"
                        Style="{StaticResource IconButton}" VerticalAlignment="Bottom"
                        ToolTip="Select folder with File Explorer.">
                    <materialDesign:PackIcon Width="30" Height="30" Cursor="Hand" Kind="Folder" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                </Button >
            </Grid>
            <TextBox x:Name="HitsoundDiffNameBox" Text="{Binding HitsoundDiffName, Mode=TwoWay}" Margin="0,0,5,0"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Hitsound map name"
                     ToolTip="The folder to export the hitsound beatmap and hitsound samples to. Original items in this folder could be deleted."/>
            <CheckBox Content="Export hitsound map" IsChecked="{Binding ExportMap}" Margin="0 15 0 0"
                      ToolTip="Check this to export the hitsound beatmap."/>
            <CheckBox Content="Export hitsound samples" IsChecked="{Binding ExportSamples}"
                      Visibility="{Binding SampleExportSettingsVisibility}"
                      ToolTip="Check this to export the custom hitsound samples."/>
            <CheckBox Content="Show results" IsChecked="{Binding ShowResults}"
                      ToolTip="Check this to see the resulting number of custom indices, hitsound samples, and index changes."/>
            <CheckBox Content="Delete all files in export folder" IsChecked="{Binding DeleteAllInExportFirst}"
                      ToolTip="Check this to automatically delete all files in the export folder before exporting. When using this be sure there aren't any important files in your export folder."/>
            <CheckBox Name="UsePreviousSampleSchemaBox" Content="Use previous sample schema" IsChecked="{Binding UsePreviousSampleSchema}"
                      ToolTip="Check this to use the same samples as the previous export."
                      Visibility="{Binding SampleExportSettingsVisibility}"/>
            <CheckBox Content="Allow growth of previous sample schema" IsChecked="{Binding AllowGrowthPreviousSampleSchema}"
                      IsEnabled="{Binding ElementName=UsePreviousSampleSchemaBox, Path=IsChecked}"
                      Visibility="{Binding SampleExportSettingsVisibility}"
                      ToolTip="Alows expansion of the previous sample schema to always fit the need of the current export. If you dont check this, then the sample schema of this export needs to be a subset of the previous sample schema."/>
            <ComboBox Margin="0 20 0 0" ItemsSource="{Binding HitsoundExportModes}" SelectedItem="{Binding HitsoundExportModeSetting}"
                      Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Export mode"
                      ToolTip="Choose which format to export the hitsounds as. The 'Standard' option will generate hitsounds that can be copied to osu! standard beatmaps. The 'Coinciding' option combined with the osu! mania gamemode will export a lossless representation of the hitsound layers. The 'Midi' option will export a single MIDI file with all the MIDI information of the hitsound layers."/>
            <TextBox Margin="0,5,0,0"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="Note grouping leniency"
                     ToolTip="Maximum time in millisecond that can be between two hitsounds while treated as being at the same time."
                     Visibility="{Binding StandardExtraSettingsVisibility}">
                <TextBox.Text>
                    <Binding Path="ZipLayersLeniency" Mode="TwoWay" NotifyOnValidationError="True">
                        <Binding.Converter>
                            <domain:DoubleToStringConverter/>
                        </Binding.Converter>
                        <Binding.ValidationRules>
                            <domain:IsGreaterOrEqualValidationRule>
                                <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    <domain:DoubleWrapper Value="0"/>
                                </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                            </domain:IsGreaterOrEqualValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Margin="0,5,5,0"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}" materialDesign:HintAssist.Hint="First custom index"
                     ToolTip="The index of the first custom index of custom indices that get generated."
                     Visibility="{Binding StandardExtraSettingsVisibility}">
                <TextBox.Text>
                    <Binding Path="FirstCustomIndex" Mode="TwoWay" NotifyOnValidationError="True" ConverterParameter="1">
                        <Binding.Converter>
                            <domain:IntToStringConverter/>
                        </Binding.Converter>
                        <Binding.ValidationRules>
                            <domain:IsGreaterOrEqualValidationRule>
                                <domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                                    <domain:DoubleWrapper Value="0"/>
                                </domain:IsGreaterOrEqualValidationRule.ValueWrapper>
                            </domain:IsGreaterOrEqualValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <CheckBox Content="Add regular hitsounds" IsChecked="{Binding AddCoincidingRegularHitsounds}" Margin="0 5 0 0"
                      Visibility="{Binding CoincidingExtraSettingsVisibility}"
                      ToolTip="Check this to add whistles, claps, finishes, and samplesets ontop of the filename hitsounding used by coinciding export."/>
            <CheckBox Content="Add green line volume" IsChecked="{Binding AddGreenLineVolumeToMidi}" Margin="0 5 0 0"
                      Visibility="{Binding MidiExtraSettingsVisibility}"
                      ToolTip="Check this to add a track to the MIDI with volume changes from timing points."/>
            <ComboBox Margin="0 10 0 0" ItemsSource="{Binding HitsoundExportGameModes}" SelectedItem="{Binding HitsoundExportGameMode}"
                      Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Export gamemode"
                      Visibility="{Binding SampleExportSettingsVisibility}"
                      ToolTip="Choose the gamemode for the exported hitsound map."/>

            <ComboBox Margin="0 15 0 0" ItemsSource="{Binding SampleExportFormatDisplayNames}" SelectedItem="{Binding SingleSampleExportFormatDisplay}"
                      Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Sample file format"
                      Visibility="{Binding SampleExportSettingsVisibility}"
                      ToolTip="Choose the file format for exported sound samples. Default will match the encoding of the source files."/>
            <ComboBox Margin="0 5 0 0" ItemsSource="{Binding SampleExportFormatDisplayNames}" SelectedItem="{Binding MixedSampleExportFormatDisplay}"
                      Style="{StaticResource MaterialDesignFloatingHintComboBox}" materialDesign:HintAssist.Hint="Mixed sample file format"
                      Visibility="{Binding SampleExportSettingsVisibility}"
                      ToolTip="Choose the file format for mixed exported sound samples. Mixing only occurs in the Standard hitsound export mode."/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" Grid.Row="1"
                    Margin="0 16 0 0" HorizontalAlignment="Center">
            <Button IsDefault="True" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                <Button.CommandParameter>
                    <system:Boolean>True</system:Boolean>
                </Button.CommandParameter>
                ACCEPT
            </Button>
            <Button IsCancel="True" Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                <Button.CommandParameter>
                    <system:Boolean>False</system:Boolean>
                </Button.CommandParameter>
                CANCEL
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
