<local:SingleRunMappingTool x:Class="Mapping_Tools.Views.TumourGenerator.TumourGeneratorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mapping_Tools.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:domain="clr-namespace:Mapping_Tools.Components.Domain"
             xmlns:components="clr-namespace:Mapping_Tools.Components"
             xmlns:objectVisualiser="clr-namespace:Mapping_Tools.Components.ObjectVisualiser"
             xmlns:viewmodels="clr-namespace:Mapping_Tools.Viewmodels"
             xmlns:domain1="clr-namespace:Mapping_Tools.Classes.Tools.TumourGenerating.Domain"
             xmlns:options="clr-namespace:Mapping_Tools.Classes.Tools.TumourGenerating.Options"
             d:DataContext="{d:DesignInstance Type=viewmodels:TumourGeneratorVm}"
             mc:Ignorable="d" 
             x:Name="This"
             Loaded="OnLoaded"
             d:DesignHeight="450" Width="759.5">
    <local:SingleRunMappingTool.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        <domain:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
        <domain:IntToStringConverter x:Key="IntToStringConverter"/>
        <domain:TimeToStringConverter x:Key="TimeToStringConverter"/>
        <domain:MultiValueConverterGroup x:Key="BooleanInvertToVisibilityConverter">
            <domain:BooleanInvertConverter/>
            <domain:BooleanToVisibilityConverter/>
        </domain:MultiValueConverterGroup>
        <domain:MultiValueConverterGroup x:Key="BooleanAOrNotBConverter">
            <domain:IdentityConverter/>
            <domain:BooleanInvertConverter/>
            <domain:BooleanOrConverter/>
        </domain:MultiValueConverterGroup>
        <domain:MultiValueConverterGroup x:Key="BooleanAAndNotBConverter">
            <domain:IdentityConverter/>
            <domain:BooleanInvertConverter/>
            <domain:BooleanAndConverter/>
        </domain:MultiValueConverterGroup>
        <domain:BooleanInvertConverter x:Key="BooleanInvertConverter"/>
        <domain1:TumourTemplateToEnumConverter x:Key="TumourTemplateToEnumConverter"/>
    </local:SingleRunMappingTool.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <TextBlock FontSize="40" FontWeight="Bold" Foreground="{DynamicResource PrimaryHueMidBrush}">
                    <Run Text="Tumour Generator 2"/>
                </TextBlock>
                <materialDesign:PopupBox Margin="10" VerticalAlignment="Bottom" ToolTip="Click me!">
                    <materialDesign:PopupBox.ToggleContent>
                        <materialDesign:PackIcon Kind="HelpCircle" Width="24" Height="24" Foreground="{DynamicResource SecondaryHueMidBrush}"/>
                    </materialDesign:PopupBox.ToggleContent>
                    <TextBlock TextWrapping="Wrap" MaxWidth="600" Padding="5">
                        Tumour Generator generates copious amounts of tumours.
                    </TextBlock>
                </materialDesign:PopupBox>
            </StackPanel>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Margin="0 0 10 0">
                    <!-- Add options about individual tumours: template, scale, length, rotation -->
                    <TextBlock Text="Template" FontWeight="Bold" Margin="0 10 0 0"/>
                    <ComboBox ItemsSource="{Binding TumourTemplates}"
                              SelectedItem="{Binding CurrentLayer.TumourTemplate, Converter={StaticResource TumourTemplateToEnumConverter}}"
                              Margin="0 0 0 0"
                              ToolTip="Tumour template. Determines the shape of the tumour."/>
                    <TextBlock Text="Scale" FontWeight="Bold" Margin="0 10 0 0"/>
                    <components:ValueOrGraphControl GraphState="{Binding CurrentLayer.TumourScale}"
                                                    ToolTip="The scale of the tumour determines how far the tumour protrudes from the slider."/>
                    <TextBlock Text="Length" FontWeight="Bold" Margin="0 10 0 0"/>
                    <components:ValueOrGraphControl GraphState="{Binding CurrentLayer.TumourLength}"
                                                    ToolTip="The length of the tumour determines how much length the tumour takes up on the slider."/>
                    <TextBlock Text="Rotation" FontWeight="Bold" Margin="0 10 0 0"/>
                    <components:ValueOrGraphControl GraphState="{Binding CurrentLayer.TumourRotation}"
                                                    ToolTip="The rotation of the tumour determines which way the tumour points in relation to the slider."/>
                </StackPanel>

                <StackPanel Grid.Column="1" Margin="0 0 10 0">
                    <!-- Add options about placement of multiple tumours: sidedness, distance, count, start, end, recalculate -->
                    <TextBlock Text="Sidedness" FontWeight="Bold" Margin="0 10 0 0"/>
                    <ComboBox ItemsSource="{Binding TumourSides}"
                              SelectedItem="{Binding CurrentLayer.TumourSidedness}"
                              Margin="0 0 0 0"
                              ToolTip="Tumour sidedness. Determines on which side of the slider to place the tumours."/>
                    <TextBlock Text="Length" FontWeight="Bold" Margin="0 10 0 0"/>
                    <components:ValueOrGraphControl GraphState="{Binding CurrentLayer.TumourDistance}"
                                                    ToolTip="The tumour distance determines the distance between the centre of each tumour."/>
                    <TextBox materialDesign:HintAssist.Hint="Count" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding CurrentLayer.TumourCount, Converter={StaticResource IntToStringConverter}, ConverterParameter=-1}"
                             ToolTip="The number of tumours to place on the slider. If -1 this count will be automatically determined using the distance and slider length."/>
                    <TextBox materialDesign:HintAssist.Hint="Start" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding CurrentLayer.TumourStart, Converter={StaticResource DoubleToStringConverter}, ConverterParameter=-1}"
                             ToolTip="The distance along the slider in osu! pixels where to start the placement of tumours."/>
                    <TextBox materialDesign:HintAssist.Hint="End" Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                             Text="{Binding CurrentLayer.TumourEnd, Converter={StaticResource DoubleToStringConverter}, ConverterParameter=-1}"
                             ToolTip="The distance along the slider in osu! pixels where to end the placement of tumours."/>
                    <CheckBox IsChecked="{Binding CurrentLayer.Recalculate}"
                              Content="Recalculate" ToolTip="Whether to recalculate the distances and angles of the slider before applying this layer. If true, tumours will be placed on top of tumours of the previous layers as if they were part of the slider, instead of merging with those tumours."/>
                    <Slider Minimum="0" Maximum="1" TickFrequency="0.1" Value="{Binding Position}"/>
                </StackPanel>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <materialDesign:Card Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" Padding="10"
                                 ToolTip="Result preview">
                        <objectVisualiser:HitObjectElement x:Name="GraphHitObjectElement" HitObject="{Binding TumouredPreviewHitObject}"
                                                   Stroke="YellowGreen" Fill="DarkSlateGray" SliderBallStroke="White" Thickness="50" ShowAnchors="True"/>
                    </materialDesign:Card>
                    <ProgressBar Grid.Row="0"
                        Style="{StaticResource MaterialDesignCircularProgressBar}"
                        Visibility="{Binding IsProcessingPreview, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                        Value="0"
                        IsIndeterminate="True" />

                    <ListBox Grid.Row="1" ItemsSource="{Binding TumourLayers}"
                             SelectionMode="Single"
                             SelectedItem="{Binding CurrentLayer}"
                             SelectedIndex="{Binding CurrentLayerIndex}">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="options:TumourLayer">
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Layer"/>
                                    <CheckBox Grid.Column="1" IsChecked="{Binding IsActive}"/>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Grid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Margin="0 10 10 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox x:Name="SelectionModeBox" Grid.Column="0" ItemsSource="{Binding ImportModes}" SelectedItem="{Binding ImportModeSetting}" Margin="0 0 5 0" VerticalAlignment="Top"
                                  ToolTip="Import mode"/>

                    <TextBox Grid.Column="1" Text="{Binding TimeCode}" Visibility="{Binding TimeCodeBoxVisibility}" Margin="5 0 5 2" Width="100" VerticalAlignment="Top"
                                 materialDesign:HintAssist.Hint="Time code"
                                 ToolTip="Input a time code here. Example time code: 00:56:823 (1) - "/>

                    <Button Grid.Column="2" Style="{StaticResource MaterialDesignOutlinedButton}" Command="{Binding ImportCommand}" Margin="5 0 0 0"
                                ToolTip="Import sliders into the preview." HorizontalAlignment="Right" VerticalAlignment="Top">
                        Preview slider
                    </Button>
                </Grid>

                <Viewbox Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70" Margin="10">
                    <Button
                        IsEnabled="{Binding ElementName=This, Path=CanRun}"
                        Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Click="Start_Click"
                        ToolTip="Generate copious amounts of tumours.">
                        <materialDesign:PackIcon
                            Kind="Play" Height="36" Width="36" />
                    </Button>
                </Viewbox>
            </Grid>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <WrapPanel VerticalAlignment="Bottom">
                    <TextBlock TextWrapping="NoWrap" Text="Made by OliBomby" FontWeight="Bold" Opacity="0.58"/>
                </WrapPanel>
            </Grid>
            <Grid Grid.Column="1">
                <ProgressBar Value="{Binding ElementName=This, Path=Progress}" Margin="20,0,20,0" Height="20" Background="{x:Null}" BorderBrush="{x:Null}"/>
            </Grid>
        </Grid>
    </Grid>
</local:SingleRunMappingTool>
